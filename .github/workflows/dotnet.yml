# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build, Test

on:
  push:
    paths-ignore:
      - '**.md'
    branches:
      - '**'
  pull_request:
    paths-ignore:
      - '**.md'
    branches:
      - '**'
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
      packages: write # for pushing GitHub Nuget packages      
      
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
      working-directory: src
    - name: Build
      run: dotnet build --configuration Release --no-restore
      working-directory: src/DotNetWrappers
    - name: Test
      run: dotnet test  --configuration Release --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
      working-directory: src/DotNetWrappers.Tests
    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: src/DotNetWrappers.Tests/coverage/**/coverage.cobertura.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '10 80'    
    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md
    - name: Add GitHub Nuget Source
      run: dotnet nuget add source --username toddbauer --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/NAMESPACE/index.json"
    - name: Package Project
      run: dotnet pack --configuration Release
      working-directory: src/DotNetWrappers
    - name: Push Package
      run: dotnet nuget push "bin/Release/DotNetWrappers.1.0.0.nupkg"  --api-key ${{ secrets.GITHUB_TOKEN }} --source "github"
      working-directory: src/DotNetWrappers
